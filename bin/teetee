#!/usr/bin/env bash
#
# teetee - utility to copy both stdout and stderr to files.  This
# works in Bash 4.4 though its documentation says you can only have
# one coprocess at a time.  Can't guarantee for earlier versions of
# Bash.

export TTSTDOUT="$1"; shift
export TTSTDERR="$1"; shift

if (( $# )) ; then
    >&2 echo "teetee: not enough arguments"
    exit 1
fi

exec 3>&1                       # 3 is now clone of stdout, inherited by both coprocs
exec 4>&2                       # 4 is now clone of stderr, inherited by both coprocs

coproc A {
    exec 2>&4                   # 2 is now clone of stderr
    exec 4>&-                   # no need for this fd
    exec tee "${TTSTDOUT}" >&3  # writes to clone of stdout; closes ${A[0]}
}

exec 2>&-                       # silence the "coproc [...] still exists" warning
coproc B {
    exec 2>&4                   # 2 is now clone of stderr
    exec 3>&-                   # no need for this fd
    exec tee "${TTSTDERR}" >&4  # writes to clone of stderr; closes ${B[0]}
}
exec 2>&4                       # restore stderr

exec "$@" 1>&${A[1]} 2>&${B[1]}
