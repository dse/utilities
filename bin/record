#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset

if (( $# < 3 )) ; then
    echo "record: not enough arguments" >&2
    exit 1
fi

: ${RECORD_A_SHOW_HOME:="${HOME}/record-a-show"}

STREAMDIR="$1"
STREAMURL="$2"
TOTAL_DURATION="$3"

#------------------------------------------------------------------------------
mkdir -p "${RECORD_A_SHOW_HOME}"
STREAMDIR="$(cd "${RECORD_A_SHOW_HOME}" && realpath "${STREAMDIR}")"

#------------------------------------------------------------------------------
NOW="$(date +%s)"               # 1645902696 (seconds)
END=$(( NOW + TOTAL_DURATION ))       # 1645910136 (seconds)

#------------------------------------------------------------------------------
declare -a CMD
mkdir -p "${STREAMDIR}"
cd "${STREAMDIR}"

EXT="$(ffprobe "${STREAMURL}" |& sed -nE '/^\s*Stream .* Audio: (\S+),.*$/{s//\1/p;q;}')"
: ${EXT:=mp4}          # default. MP4 IS A CONTAINER; CODEC IS COPIED.

while (( NOW < END )) ; do
    FFMPEG_DURATION=$(( END - NOW )) # 7440
    TIMESTAMP="$(date +'%Y-%m-%d-%H%M%S')" # 165800
    FILENAME="${TIMESTAMP}.${EXT}" # .../2022-02-26-165800.mp4
    CMD=(
        /usr/bin/ffmpeg
        -reconnect 1
        -reconnect_at_eof 1
        -reconnect_streamed 1
        -reconnect_on_network_error 1
        -reconnect_on_http_error 4xx,5xx
        -y -loglevel warning
        -i "${STREAMURL}" -t "${FFMPEG_DURATION}" -codec copy "${FILENAME}"
    )
    >&2 echo "+ ${CMD[@]@Q}"
    if "${CMD[@]}" ; then
        break
    fi
    echo "${FFMPEG} failed, exiting with code $?"
    NOW="$(date +%s)"
    sleep 5
done
