#!/usr/bin/env perl
use warnings;
use strict;

use File::Basename qw(basename);
our $PROGNAME = basename($0);

use Unicode::UCD qw(charinfo);
use Data::Dumper;
use POSIX qw(floor);

my $longLine = 0;

my %char = (
    0 => { shortName => 'NUL' },
    1 => { shortName => 'SOH' },
    2 => { shortName => 'STX' },
    3 => { shortName => 'ETX' },
    4 => { shortName => 'EOT' },
    5 => { shortName => 'ENQ' },
    6 => { shortName => 'ACK' },
    7 => { shortName => 'BEL' },
    8 => { shortName => 'BS' },
    9 => { shortName => 'TAB' },
    10 => { shortName => 'LF' },
    11 => { shortName => 'VT' },
    12 => { shortName => 'FF' },
    13 => { shortName => 'CR' },
    14 => { shortName => 'SO' },
    15 => { shortName => 'SI' },
    16 => { shortName => 'DLE' },
    17 => { shortName => 'DC1' },
    18 => { shortName => 'DC2' },
    19 => { shortName => 'DC3' },
    20 => { shortName => 'DC4' },
    21 => { shortName => 'NAK' },
    22 => { shortName => 'SYN' },
    23 => { shortName => 'ETB' },
    24 => { shortName => 'CAN' },
    25 => { shortName => 'EM' },
    26 => { shortName => 'SUB' },
    27 => { shortName => 'ESC' },
    28 => { shortName => 'FS' },
    29 => { shortName => 'GS' },
    30 => { shortName => 'RS' },
    31 => { shortName => 'US' },
    32 => { shortName => 'SP' },
    127 => { shortName => 'DEL' },
);

my @lines;
my @codes = (0 .. 127);

if ($PROGNAME eq 'controls') {
    @codes = (0 .. 31, 127);
    $longLine = 1;
} elsif ($PROGNAME eq 'printable') {
    @codes = (32 .. 126);
}

foreach my $i (@codes) {
    my $charinfo = charinfo($i);
    my $char = chr($i);
    my $isPrint = $i >= 32 && $i <= 126;
    my $charDisplayed = $char{$i}{shortName} // " $char ";
    my $name = $charinfo->{name};
    my $unicode10 = $charinfo->{unicode10};
    my $control = '^' . chr($i + 64);
    if ($i == 127) {
        $control = '^?';
    }
    $name = undef if $name eq '';
    $unicode10 = undef if $unicode10 eq '';
    if (defined $name && $name eq '<control>') {
        $name = $unicode10 // '-';
        $unicode10 = undef;
    }

    my $line;

    if ($longLine) {
        $line = sprintf("%3d  0%03o  0x%02x  %2s  %-3s ", $i, $i, $i, $control, $charDisplayed);
        $line .= sprintf(" %s", $name) if defined $name;
        $line .= sprintf(" (%s)", $unicode10) if defined $unicode10;
    } else {
        $line = sprintf("%3d %03o %02x %-3s", $i, $i, $i, $charDisplayed);
    }
    push(@lines, $line);
}

if ($longLine) {
    print("$_\n") foreach @lines;
} else {
    if (-t 1) {
        print("Dec Oct Hx Chr  Dec Oct Hx Chr  Dec Oct Hx Chr  Dec Oct Hx Chr  Dec Oct Hx Chr\n");
        print("--- --- -- ---  --- --- -- ---  --- --- -- ---  --- --- -- ---  --- --- -- ---\n");
        my $columnCount = 5;
        my @column = ();
        for (my $i = 0; $i <= $#lines; $i += 1) {
            push(@{$column[$i % $columnCount]}, $lines[$i]);
        }
        my @row = ();
        my $rowCount = floor((scalar @lines + $columnCount - 1) / $columnCount);
        my $rowIndex = 0;
        for (my $i = 0; $i <= $#lines; $i += 1) {
            push(@{$row[$rowIndex]}, $lines[$i]);
            $rowIndex += 1;
            if ($rowIndex >= $rowCount) {
                $rowIndex = 0;
            }
        }
        foreach my $row (@row) {
            printf("%s\n", join('  ', @$row));
        }
    } else {
        print("#Dc Oct Hx Chr\n");
        print("#-- --- -- ---\n");
        print("$_\n") foreach @lines;
    }
}

my @other = ('ascii', 'controls', 'printable');
@other = grep { $_ ne $PROGNAME } @other;
my $other = join('       ', '', @other);

print("# ") if !-t 1;
print("You can also type one of the following: $other\n");
