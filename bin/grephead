#!/usr/bin/env perl
use warnings;
use strict;
use open qw(locale);

#------------------------------------------------------------------------------
use File::Basename qw(basename);
our $PROGNAME = basename($0);

#------------------------------------------------------------------------------
our $trim = 0;

#------------------------------------------------------------------------------
use Getopt::Long;
Getopt::Long::Configure('bundling', 'gnu_compat', 'no_ignore_case');
Getopt::Long::GetOptions(
    't|trim' => \$trim,
    'h|help' => sub { usage(); exit(0); },
) or die("Type '$PROGNAME --help' for help.\n");

sub usage { print(<<"END"); }
usage:
    $PROGNAME [<option> ...] [<filename> ...]
options:
    -h, --help
    -t, --trim
    ...
END

###############################################################################

our $GREEN = '';
our $RESET = '';

if (exists $ENV{TERM} && $ENV{TERM} =~ m{^(screen|xterm|vt\d|linux|putty)}) {
    $GREEN = "\e[32m";
    $RESET = "\e[0m";
}

my $oldFilename;
while (<>) {
    s{\R\z}{};
    if (s{^(?<filename>.*?):}{}) {
        my $filename = $+{filename};
        if (!defined $oldFilename || $oldFilename ne $filename) {
            printf("%s==> %s <==%s\n", $GREEN, $filename, $RESET);
            $oldFilename = $filename;
        }
    }
    if ($trim) {
        if (s{^(?<prefix>\d+:)}{}) {
            my $prefix = $+{prefix};
            s{^\s*}{};
            s{\s*$}{};
            $_ = $prefix . $_;
        } else {
            s{^\s*}{};
            s{\s*$}{};
        }
    }
    printf("%s\n", $_);
}
