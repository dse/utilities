#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset
shopt -s lastpipe
# set -o xtrace

main () {
    no_sed=0
    verbose=0
    dry_run=0
    keep=0
    declare -a opt_dry_run=()
    declare -a opt_verbose=()
    declare -a git_diff_options=()
    while getopts 'wmknv-:h' OPTION ; do
        if [[ "${OPTION}" = "-" ]] ; then
            case "${OPTARG}" in
                '')
                    # "--" argument
                    OPTIND=$((OPTIND + 1))
                    break
                    ;;
                *=*)
                    OPTION="${OPTARG%%=*}"
                    OPTARG="${OPTARG#*=}"
                    ;;
                *)
                    OPTION="${OPTARG}"
                    unset OPTARG
                    ;;
            esac
        fi
        get_arg () {
            if [[ ! -v OPTARG ]] ; then
                if (( OPTIND > $# )) ; then
                    echo "option missing required argument - ${OPTION}"
                    exit 1
                fi
                OPTARG="${!OPTIND}"
                OPTIND=$((OPTIND + 1))
                echo "OPTIND=${OPTARG}"
            fi
        }
        case "${OPTION}" in
            w)
                git_diff_options+=(-w)
                ;;
            word-diff)
                git_diff_options+=(--word-diff)
                ;;
            k|keep)
                keep=1
                ;;
            n|dry-run)
                dry_run=1
                opt_dry_run=(-n)
                ;;
            v|verbose)
                verbose=$((verbose + 1))
                opt_verbose+=(-v)
                ;;
            quasi)
                exclude+=(--exclude "*.pdf")
                exclude+=(--exclude "*.doc")
                exclude+=(--exclude "*.xls")
                exclude+=(--exclude "*.ppt")
                exclude+=(--exclude "*.sfd")
                ;;
            images)
                exclude+=(--exclude "*.gif")
                exclude+=(--exclude "*.jpg")
                exclude+=(--exclude "*.jpeg")
                exclude+=(--exclude "*.png")
                exclude+=(--exclude "*.tif")
                exclude+=(--exclude "*.tiff")
                exclude+=(--exclude "*.bmp")
                exclude+=(--exclude "*.heic")
                exclude+=(--exclude "*.webm")
                ;;
            audio)
                exclude+=(--exclude "*.mp3")
                exclude+=(--exclude "*.wav")
                exclude+=(--exclude "*.aac")
                exclude+=(--exclude "*.aiff")
                exclude+=(--exclude "*.ogg")
                exclude+=(--exclude "*.wma")
                exclude+=(--exclude "*.m4a")
                exclude+=(--exclude "*.alac")
                exclude+=(--exclude "*.mp2")
                exclude+=(--exclude "*.flac")
                ;;
            video)
                exclude+=(--exclude "*.mp4")
                exclude+=(--exclude "*.qt")
                exclude+=(--exclude "*.wmv")
                exclude+=(--exclude "*.hevc")
                exclude+=(--exclude "*.au")
                exclude+=(--exclude "*.avi")
                exclude+=(--exclude "*.mov")
                exclude+=(--exclude "*.webm")
                exclude+=(--exclude "*.flv")
                exclude+=(--exclude "*.avchd")
                exclude+=(--exclude "*.mkv")
                ;;
            x|exclude)
                get_arg "$@"
                exclude+=(--exclude "${OPTARG}")
                ;;
            diff-filter)
                get_arg "$@"
                git_diff_options+=(--diff-filter="${OPTARG}")
                ;;
            m|modified)
                git_diff_options+=(--diff-filter=M)
                ;;
            exclude-from)
                get_arg "$@"
                exclude+=(--exclude-from "${OPTARG}")
                ;;
            no-sed)
                no_sed=1
                ;;
            h|help)
                usage
                exit 0
                ;;
            *)
                echo "gdiff: illegal option - ${OPTION}"
                exit 1
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if (( $# < 2 )) ; then
        FATAL "not enough arguments"
    fi

    if (( $# >= 1 )) && [[ "$1" = -* ]] ; then
        FATAL "git-diff options must come AFTER the both paths"
    fi

    path1="$1"
    path2="$2"
    shift 2

    git_diff_options+=("$@")

    if (( dry_run )) ; then
        tmpfile1="TEMPFILE1"
        tmpfile2="TEMPFILE2"
    else
        if [[ "${path1}" = /dev/fd/* ]] ; then
            tmpfile1="$(mktemp)"
            cat "${path1}" >"${tmpfile1}"
            path1="${tmpfile1}"
        elif [[ "${path1}" = "-" ]] ; then
            tmpfile1="$(mktemp)"
            cat >"${tmpfile1}"
            path1="${tmpfile1}"
        elif [[ -f "${path1}" ]] ; then
            tmpfile1="$(mktemp)"
            cat "${path1}" >"${tmpfile1}"
            path1="${tmpfile1}"
        fi
        path1="$(realpath "${path1}")"

        if [[ "${path2}" = /dev/fd/* ]] ; then
            tmpfile2="$(mktemp)"
            cat "${path2}" >"${tmpfile2}"
            path2="${tmpfile2}"
        elif [[ "${path2}" = "-" ]] ; then
            tmpfile2="$(mktemp)"
            cat >"${tmpfile2}"
            path2="${tmpfile2}"
        elif [[ -f "${path2}" ]] ; then
            tmpfile2="$(mktemp)"
            cat "${path2}" >"${tmpfile2}"
            path2="${tmpfile2}"
        fi
        path2="$(realpath "${path2}")"

    fi

    both_are_dirs=0
    both_are_files=0
    if [[ -d "${path1}" ]] && [[ -d "${path2}" ]] ; then
        both_are_dirs=1
    elif [[ -f "${path1}" ]] && [[ -f "${path2}" ]] ; then
        both_are_files=1
    fi
    if (( !both_are_dirs && !both_are_files )) ; then
        FATAL "both paths must be directories or both paths must be files"
        exit 1
    fi

    declare -a git_diff_cmd=(
        git diff "${git_diff_options[@]}" --no-index "$path1" "$path2"
    )
    if (( both_are_files )) ; then
        if (( dry_run )) ; then
            echo "${git_diff_cmd[@]@Q}"
            return
        fi
        exec "${git_diff_cmd[@]@Q}"
    fi

    #--------------------------------------------------------------------------
    # at and after this point, path1 and path2 are directories.
    #--------------------------------------------------------------------------

    path2_inside_path1=0
    path1_inside_path2=0
    if [[ "${path1}" = "${path2}"/* ]] ; then
        # rhardlink run for path2 has to exclude path1
        path1_inside_path2=1
    elif [[ "${path2}" = "${path1}"/* ]] ; then
        # rhardlink run for path1 has to exclude path2
        path2_inside_path1=1
    elif [[ "${path1}" = "${path2}" ]] ; then
        FATAL "paths are the same directory"
    fi

    if (( dry_run )) ; then
        tmpdir1="TMPDIR1"
        tmpdir2="TMPDIR2"
    else
        tmpdir1="$(mktemp -d)"
        tmpdir2="$(mktemp -d)"
    fi

    {
        declare -a exclude_1=()
        declare -a exclude_2=()
        if (( path2_inside_path1 )) ; then
            exclude_1+=("--exclude=$path2")
        fi
        if (( path1_inside_path2 )) ; then
            exclude_2+=("--exclude=$path1")
        fi
        declare -a rhardlink_1=(
            rhardlink "${opt_verbose[@]}" "${opt_dry_run[@]}"
            "${exclude[@]}" "${exclude_1[@]}"
            "${path1}" "${tmpdir1}"
        )
        declare -a rhardlink_2=(
            rhardlink "${opt_verbose[@]}" "${opt_dry_run[@]}"
            "${exclude[@]}" "${exclude_2[@]}"
            "${path2}" "${tmpdir2}"
        )
        if (( dry_run )) ; then
            echo "${rhardlink_1[@]@Q}"
            echo "${rhardlink_2[@]@Q}"
        else
            "${rhardlink_1[@]}"
            "${rhardlink_2[@]}"
        fi
        declare -a git_diff_cmd=(
            git --no-pager diff --color=always --no-index \
                --src-prefix="SRC/" \
                --dst-prefix="DST/" \
                "${git_diff_options[@]}" "${tmpdir1}" "${tmpdir2}"
        )
        declare -a sed_cmd=(
            sed -E
            -e '/^'$'\e\[1m''(diff|---|\+\+\+)/{'
            -e 's# SRC'"$tmpdir1"'# A#g;'
            -e 's# DST'"$tmpdir2"'# B#g;'
            -e 's# SRC'"$tmpdir2"'# A#g;' # when files are created git diff will output wrong source path
            -e 's# DST'"$tmpdir1"'# B#g;' # for good measure
            -e '}'
            -e '/^'$'\e\[1m''rename /{'
            -e 's#rename from '"$tmpdir1"'#rename from A#;'
            -e 's#rename to '"$tmpdir2"'#rename to B#;'
            -e 's#rename from '"$tmpdir2"'#rename from A#;' # for good measure
            -e 's#rename to '"$tmpdir1"'#rename to B#;'     # for good measure
            -e '}'
        )
        if (( dry_run )) ; then
            echo "${git_diff_cmd[@]@Q}"
            return
        fi
        find "${tmpdir1}" -type d -exec chmod 0755 {} +
        find "${tmpdir1}" -type f -exec chmod 0644 {} +
        find "${tmpdir2}" -type d -exec chmod 0755 {} +
        find "${tmpdir2}" -type f -exec chmod 0644 {} +
        if (( no_sed )) ; then
            "${git_diff_cmd[@]}"
            exit 1              # in case we go past exec
        fi
        "${git_diff_cmd[@]}" | "${sed_cmd[@]}"
    } | less -sR
}

declare -a rsync_options=(
    -avC --delete-excluded
)

declare -a git_diff_options=(
    --ignore-blank-lines
    # --no-prefix
    # --word-diff
    # --diff-filter=MT
    # --src-prefix="A/"
    # --dst-prefix="B/"
)

# these are supplied to RHARDLINK.
declare -a exclude=(
    --exclude=.git
    # -C
    # --exclude="node_modules/"
    # --exclude="_cacache/"
    # --exclude=".node-gyp/"
    # --exclude="vendor/"
    # --exclude=".cache/"
    # --exclude="*.tmp"
    # --exclude="*.tmp.*"
    # --exclude="*.min"
    # --exclude="*.min.*"
    # --exclude="package-lock.json"
    # --exclude="composer.lock"
    # --exclude="yarn.lock"
    # --exclude="*.map"
    # --exclude="*.map.*"
    # --exclude=".gdiff-*/"
)

DEBUG () {
    (( verbose < 2 )) && return
    LOG DEBUG "$@"
}
INFO () {
    (( verbose < 1 )) && return
    LOG INFO "$@"
}
WARNING () {
    (( verbose < 0 )) && return
    LOG WARNING "$@"
}
ERROR () {
    (( verbose < -1 )) && return
    LOG ERROR "$@"
}
FATAL () {
    LOG FATAL "$@"
    exit 1
}
LOG () {
    local prefix=$1; shift
    echo -n "gdiff: [$prefix] " >&2
    echo "$@" >&2
}
DRY_RUN () {
    (( dry_run )) || return
    LOG DRY-RUN "$@"
}

usage () { cat <<EOF; }
gdiff ─┬ [--dry-run]        ┬─┬ <dir1> <dir2>   ┬─ [git diff options ...]
       │ [--keep]           │ └ <file1> <file2> ┘
       └ [-v,--verbose ...] ┘
EOF

trap at_exit EXIT
at_exit () {
    if (( ! keep )) ; then
        [[ -v tmpdir1  ]] && [[ -e "${tmpdir1}"  ]] && { rm -fr "${tmpdir1}"  || true; }
        [[ -v tmpdir2  ]] && [[ -e "${tmpdir2}"  ]] && { rm -fr "${tmpdir2}"  || true; }
        [[ -v tmpfile1 ]] && [[ -e "${tmpfile1}" ]] && { rm -fr "${tmpfile1}" || true; }
        [[ -v tmpfile2 ]] && [[ -e "${tmpfile2}" ]] && { rm -fr "${tmpfile2}" || true; }
    fi
}

main "$@"
