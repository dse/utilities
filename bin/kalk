#!/usr/bin/env perl
use warnings;
use strict;
use Scalar::Util qw(looks_like_number);
while (<>) {
    s{(?<start>\{\{)
      (?<sp1>\s*)
      (?<expr>\S.*?)
      (?<sp2>\s*)
      (?<end>\}\})}
     { replace(%+) }gex;
    print;
}
sub replace {
    my %A = @_;
    $A{sp1} //= '';
    $A{sp2} //= '';
    return $A{start} . $A{sp1} . evaluate($A{expr}) . $A{sp2} . $A{end};
}
sub evaluate {
    my $expr = shift;
    return $expr if looks_like_number($expr);
    return eval($expr);
}
__DATA__
