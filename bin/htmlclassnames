#!/usr/bin/env perl
use warnings;
use strict;
use Sort::Naturally;
our %classes;
local $/ = undef;
my $file_count = 0;
my $byte_count = 0;
while (<>) {
   $byte_count += length($_);
   $file_count += 1;
   my $parser = My::HTML::Parser->new();
   $parser->parse($_);
   $parser->eof();
}
package My::HTML::Parser {
   use base "HTML::Parser";
   sub new {
      my ($class, @args) = @_;
      my $self = $class->SUPER::new(
         @args,
         api_version => 3,
         start_h => [
            \&start, 'self, attr',
         ],
      );
      $self->{classes} //= {};
      return $self;
   }
   sub start {
      my ($self, $attr) = @_;
      my $class = $attr->{class};
      return if !defined $class;
      my @class = grep { /\S/ } split(/\s+/, $class);
      printf("%s\n", $_) foreach @class;
   }
}
