#!/usr/bin/env bash

# 1. This program is part of my pattern of writing wrapper programs
#    that exclude stuff that I usually want to exclude, and naming
#    them by taking the name of the underlying command and repeating
#    its last letter:
#
#        findd
#        grepp
#        tidyy
#
# 2. This program is also an example of using GNU Bash 4's `corpoc`
#    builtin to filter stderr and write its results back out to
#    stderr.

create_sample_file () {
    cat <<EOF >~/.tidyy-excludes
<nobr> is not approved
trimming empty
<img> lacks "alt" attribute
EOF
}

coproc TIDYSTDERR {
    if [[ -r "${HOME}/.tidyy-excludes" ]] ; then
        grep -v -f "${HOME}/.tidyy-excludes"
    else
        grep -v \
             -e '<nobr> is not approved' \
             -e 'trimming empty' \
             -e '<img> lacks "alt" attribute'
    fi
} >&2

exec tidy "$@" 2>&"${TIDYSTDERR[1]}"
