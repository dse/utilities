#!/usr/bin/env perl
use warnings;
use strict;
use open IO => ":locale";

BEGIN {
    if (grep { $_ eq '--debug' } @ARGV) {
        $HTML::TreeBuilder::DEBUG = 15;
    }
}

use HTML::TreeBuilder;
use Data::Dumper;
use Getopt::Long;
use JSON::XS;

our $JSON = JSON::XS->new()->pretty(1)->ascii(1)->canonical(1);

our $format = 'tree';
our $elementify;
our $delete_meta;
our $unknown;

Getopt::Long::Configure('gnu_getopt');
Getopt::Long::GetOptions(
    'debug'        => sub { $format = 'debug'; },
    'd|dumper'     => sub { $format = 'dumper'; },
    'j|json'       => sub { $format = 'json'; },
    'e|elementify' => \$elementify,
    'h|html'       => sub { $format = 'html'; },
    'unknown'      => \$unknown,
    'delete-meta'  => \$delete_meta,
) or die(":-(");

local $Data::Dumper::Indent   = 1;
local $Data::Dumper::Terse    = 1;
local $Data::Dumper::Deepcopy = 1;
local $Data::Dumper::Sortkeys = 1;
local $Data::Dumper::Useqq    = 1;

local $/ = undef;
while (<>) {
    if ($delete_meta) {
        s{<\s*meta(?=\s|>)[^>]*>}{}gs;
    }
    my $tree = HTML::TreeBuilder->new();
    $tree->implicit_tags(0);
    $tree->ignore_unknown(0) if $unknown; # safe
    $tree->parse_content($_);
    if ($elementify) {
        $tree->elementify();
    }
    if ($format eq 'dumper') {
        print Dumper($tree);
    } elsif ($format eq 'json') {
        print $JSON->encode($tree);
    } elsif ($format eq 'html') {
        print $tree->as_HTML(undef, "  ");
    } elsif ($format eq 'debug') {
        # do nothing; HTML::TreeBuilder is taking care of debug
        # output.
    } else {
        $tree->dump();
    }
}
