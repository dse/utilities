#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset
shopt -s lastpipe

main () {
    declare -a profiles
    list-aws-profiles | readarray -t profiles
    echo "${#profiles[@]} profiles found"
    declare -i count=${#profiles[@]}
    declare -i exit=0
    declare -a count=0
    local profile type length role_arn

    temp="$(mktemp)"
    echo "["
    for profile in "default" "${profiles[@]}" ; do
        echo "// ******* ${profile} *******" >&2
        if (( !$# )) ; then
            continue
        fi

        aws "$@" >"${temp}" || continue
        type="$(jq -r type "${temp}")" || continue
        if [[ "$type" = "array" ]] ; then
            length="$(jq -r length "${temp}")" || continue
            if (( $length == 0 )) ; then
                continue
            fi
        elif [[ "$type" = "object" ]] ; then
            length="$(jq -r 'keys|length' "${temp}")" || continue
            if (( $length == 0 )) ; then
                continue
            fi
            if (( $length == 1 )) ; then
                type="$(jq -r '. as $obj|keys|.[0] as $key|$obj[$key]|type' "${temp}")" || continue
                if [[ "$type" = "array" ]] ; then
                    length="$(jq -r '. as $obj|keys|.[0] as $key|$obj[$key]|length' "${temp}")" || continue
                    if (( $length == 0 )) ; then
                        continue
                    fi
                fi
            fi
        fi
        array_next
        echo "        \"Profile\": \"${profile}\","
        if role_arn="$(aws configure get role_arn)" ; then
            echo "        \"RoleArn\": \"${role_arn}\","
        fi
        echo -n "        \"Data\": "
        cat "${temp}" | sed '2,${s/^/        /;}'
    done
    array_close
    echo "]"
}

array_next () {
    if (( count )) ; then
        echo "    },"
    fi
    echo "    {"
    count+=1
}
array_close () {
    echo "    }"
}

aws () {
    run_aws_with "${profile}" "$@"
}

run_aws_with () {
    local profile="$1"; shift
    local -a opt_profile=(--profile "${profile}")
    if [[ "${profile}" = "" ]] || [[ "${profile}" = "-" ]] || [[ "${profile}" = "default" ]] ; then
        opt_profile=()
    fi
    command aws "${opt_profile[@]}" --output json --color off --no-cli-pager --no-cli-auto-prompt "$@"
}

trap at_exit EXIT

at_exit () {
    [[ -v temp ]] && [[ -e "${temp}" ]] && { rm -f "${temp}" || true ; }
}

main "$@"
